basePath: /blog/
definitions:
  common.AppError:
    properties:
      key:
        type: string
      log:
        type: string
      message:
        type: string
      status_code:
        type: integer
    type: object
  common.SuccessRes:
    properties:
      data: {}
      filter: {}
      paging: {}
    type: object
  postmodel.PostCreate:
    properties:
      author_id:
        type: integer
      category_id:
        type: integer
      content:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  postmodel.PostUpdate:
    properties:
      category_id:
        type: integer
      content:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  usermodel.UserChangePd:
    properties:
      password:
        type: string
    type: object
  usermodel.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  usermodel.UserRegister:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: tran.thanhsang.dev@gmail.com
    name: API Support
    url: https://github.com/sangtranx/-Blog-CMS/tree/develop
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://github.com/sangtranx/-Blog-CMS/tree/develop
  title: API Document Blog-CMS
  version: 1.0.0
paths:
  /admin/userProfile:
    get:
      consumes:
      - application/json
      description: Get the profile of a user by their ID
      parameters:
      - description: User ID in base58 format
        in: query
        name: id
        required: true
        type: string
      - description: Bearer <Token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: Get user profile by ID
      tags:
      - users
  /admin/users:
    get:
      consumes:
      - application/json
      description: Get a list of all users
      parameters:
      - description: Bearer <Token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - users
  /change/password:
    post:
      consumes:
      - application/json
      description: Change a user's password with the provided information
      parameters:
      - description: User password changed
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/usermodel.UserChangePd'
      - description: Bearer <Token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Change password a user's password
      tags:
      - users
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password
      parameters:
      - description: Login information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/usermodel.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Authenticate user
      tags:
      - users
  /logout:
    post:
      consumes:
      - application/json
      description: log out user
      parameters:
      - description: Bearer <Token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: log out
      tags:
      - users
  /post/create:
    post:
      consumes:
      - application/json
      description: create a new post
      parameters:
      - description: Bearer <Token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: post information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/postmodel.PostCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: create a new post
      tags:
      - posts
  /post/delete:
    post:
      consumes:
      - application/json
      description: Delete a post with id
      parameters:
      - description: post id in base58 format
        in: query
        name: id
        required: true
        type: string
      - description: Bearer <Token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: Delete a post with id
      tags:
      - posts
  /post/update:
    post:
      consumes:
      - application/json
      description: create a new post
      parameters:
      - description: Bearer <Token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: post information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/postmodel.PostUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: create a new post
      tags:
      - posts
  /profile:
    get:
      consumes:
      - application/json
      description: Get the profile of the authenticated user
      parameters:
      - description: Bearer <Token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: Get user profile
      tags:
      - users
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided information
      parameters:
      - description: User registration data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/usermodel.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      summary: Register a new user
      tags:
      - users
  /user/paging:
    get:
      consumes:
      - application/json
      description: Get a paginated list of users
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      - description: Bearer <Token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.AppError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - ApiKeyAuth: []
      summary: Get a list of users
      tags:
      - users
swagger: "2.0"
